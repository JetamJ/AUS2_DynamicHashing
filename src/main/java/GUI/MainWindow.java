/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import javax.swing.*;

import DH.DynamicHash;
import Data.GPS;
import Data.Parcel;
import Data.Property;
import Data.Record;

import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.util.Arrays;

/**
 *
 * @author Mato
 */
public class MainWindow extends javax.swing.JFrame {

    private DynamicHashManager manager;
    DefaultListModel<Record> listModel = new DefaultListModel<>();

    public MainWindow(DynamicHashManager manager) {
        initComponents();
        this.manager = manager;
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        objectPanel = new javax.swing.JPanel();
        idLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        gps1Label = new javax.swing.JLabel();
        gps2Label = new javax.swing.JLabel();
        id2Text = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        gps1Text1 = new javax.swing.JTextField();
        gps1Text2 = new javax.swing.JTextField();
        gps1Text3 = new javax.swing.JTextField();
        gps1Text4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        gps2Text1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        gps2Text2 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        gps2Text3 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        gps2Text4 = new javax.swing.JTextField();
        propertyCheckBox = new javax.swing.JCheckBox();
        parcelCheckBox = new javax.swing.JCheckBox();
        findButton = new javax.swing.JButton();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        uoutputButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        descText = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        idText = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        listText = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        idLabel.setText("Súpisné číslo:");

        descriptionLabel.setText("Popis:");

        gps1Label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        gps1Label.setText("GPS1");

        gps2Label.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        gps2Label.setText("GPS2");

        jLabel1.setText("Šírka:");

        jLabel2.setText("Pozícia:");

        jLabel3.setText("Výška:");

        jLabel4.setText("Pozícia:");

        gps1Text1.setName(""); // NOI18N

        jLabel5.setText("Šírka:");

        jLabel6.setText("Pozícia:");

        jLabel7.setText("Výška:");

        jLabel8.setText("Pozícia:");

        propertyCheckBox.setText("Nehnutelnost");
        propertyCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                propertyCheckBoxItemStateChanged(evt);
            }
        });

        parcelCheckBox.setText("Parcela");
        parcelCheckBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                parcelCheckBoxItemStateChanged(evt);
            }
        });

        findButton.setText("Nájdi");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    findButtonActionPerformed(evt);
                } catch (NoSuchAlgorithmException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        addButton.setText("Vloz");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    addButtonActionPerformed(evt);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                } catch (NoSuchAlgorithmException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        deleteButton.setText("Vymaz");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    deleteButtonActionPerformed(evt);
                } catch (NoSuchAlgorithmException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        uoutputButton.setText("Vypis");
        uoutputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    uoutputButtonActionPerformed(evt);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        jButton1.setText("Generuj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton1ActionPerformed(evt);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                } catch (NoSuchAlgorithmException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        editButton.setText("Uprav");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    editButtonActionPerformed(evt);
                } catch (NoSuchAlgorithmException e) {
                    throw new RuntimeException(e);
                } catch (IOException e) {
                    throw new RuntimeException(e);
                }
            }
        });

        saveButton.setText("Uloz do Suboru");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Nacitaj zo Suboru");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Id:");

        jLabel10.setText("Zoznam:");

        javax.swing.GroupLayout objectPanelLayout = new javax.swing.GroupLayout(objectPanel);
        objectPanel.setLayout(objectPanelLayout);
        objectPanelLayout.setHorizontalGroup(
            objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(objectPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(objectPanelLayout.createSequentialGroup()
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(objectPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(gps1Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(gps1Text3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(gps1Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, objectPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(gps1Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(32, 32, 32)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)))
                            .addGroup(objectPanelLayout.createSequentialGroup()
                                .addComponent(gps1Label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(gps2Label)))
                        .addGap(18, 18, 18)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(gps2Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gps2Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gps2Text3, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gps2Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idLabel)
                            .addComponent(descriptionLabel)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addGap(10, 10, 10)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(id2Text)
                            .addComponent(descText)
                            .addComponent(idText)
                            .addComponent(listText, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))))
                .addGap(18, 18, 18)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addComponent(propertyCheckBox)
                        .addGap(56, 56, 56)
                        .addComponent(parcelCheckBox)
                        .addGap(35, 35, 35))
                    .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(findButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(deleteButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(uoutputButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        objectPanelLayout.setVerticalGroup(
            objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(objectPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addButton)
                    .addComponent(jLabel9)
                    .addComponent(idText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(findButton)
                    .addComponent(idLabel)
                    .addComponent(id2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(descriptionLabel)
                    .addComponent(descText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(jLabel10)
                    .addComponent(listText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(uoutputButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(parcelCheckBox)
                            .addComponent(propertyCheckBox)))
                    .addGroup(objectPanelLayout.createSequentialGroup()
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(gps1Label)
                            .addComponent(gps2Label))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(objectPanelLayout.createSequentialGroup()
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(gps1Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(gps1Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(gps1Text3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(gps1Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(objectPanelLayout.createSequentialGroup()
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(gps2Text1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(gps2Text2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(gps2Text3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(objectPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel8)
                                    .addComponent(gps2Text4, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        logArea.setColumns(20);
        logArea.setRows(5);
        jScrollPane2.setViewportView(logArea);

        jMenu1.setText("File");
        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(objectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(objectPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int userSelection = fileChooser.showSaveDialog(null);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            java.io.File fileToSave = fileChooser.getSelectedFile();
            if (parcelCheckBox.isSelected()) {
                manager.loadDHParcel(fileToSave.getAbsolutePath());
            }
            if (propertyCheckBox.isSelected()) {
                manager.loadDHProperty(fileToSave.getAbsolutePath());
            }
        }

        userSelection = fileChooser.showSaveDialog(null);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            java.io.File fileToSave = fileChooser.getSelectedFile();
            if (parcelCheckBox.isSelected()) {
                manager.loadQTParcel(fileToSave.getAbsolutePath());
            }
            if (propertyCheckBox.isSelected()) {
                manager.loadQTProperty(fileToSave.getAbsolutePath());
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int userSelection = fileChooser.showSaveDialog(null);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            java.io.File fileToSave = fileChooser.getSelectedFile();
            if (parcelCheckBox.isSelected()) {
                manager.saveDHParcel(fileToSave.getAbsolutePath());
            }
            if (propertyCheckBox.isSelected()) {
                manager.saveDHProperty(fileToSave.getAbsolutePath());
            }
        }

        userSelection = fileChooser.showSaveDialog(null);
        if (userSelection == JFileChooser.APPROVE_OPTION) {
            java.io.File fileToSave = fileChooser.getSelectedFile();
            if (parcelCheckBox.isSelected()) {
                manager.saveQTParcel(fileToSave.getAbsolutePath());
            }
            if (propertyCheckBox.isSelected()) {
                manager.saveQTProperty(fileToSave.getAbsolutePath());
            }
        }

    }//GEN-LAST:event_saveButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) throws NoSuchAlgorithmException, IOException {//GEN-FIRST:event_editButtonActionPerformed
        if (parcelCheckBox.isSelected()) {
            int id = Integer.parseInt(idText.getText());
            double x1 = Double.parseDouble(gps1Text2.getText());
            double y1 = Double.parseDouble(gps1Text4.getText());
            double x2 = Double.parseDouble(gps2Text2.getText());
            double y2 = Double.parseDouble(gps2Text4.getText());
            GPS gps1 = new GPS('X', x1, 'X', y1);
            GPS gps2 = new GPS('X', x2, 'X', y2);
            String desc = descText.getText();
            Parcel newParcel = new Parcel(id, desc, gps1, gps2);
            boolean result = manager.editParcel(id, newParcel);
            if (result) {
                logArea.setText("Successfully edited");
            } else {
                logArea.setText("Failed to edit");
            }
        }
        if (propertyCheckBox.isSelected()) {
            int id = Integer.parseInt(idText.getText());
            double x1 = Double.parseDouble(gps1Text2.getText());
            double y1 = Double.parseDouble(gps1Text4.getText());
            double x2 = Double.parseDouble(gps2Text2.getText());
            double y2 = Double.parseDouble(gps2Text4.getText());
            GPS gps1 = new GPS('X', x1, 'X', y1);
            GPS gps2 = new GPS('X', x2, 'X', y2);
            String desc = descText.getText();
            int registerNumber = Integer.parseInt(id2Text.getText());
            Property newProperty = new Property(id, registerNumber, desc, gps1, gps2);
            boolean result = manager.editProperty(id, newProperty);
            if (result) {
                logArea.setText("Successfully edited");
            } else {
                logArea.setText("Failed to edit");
            }
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) throws IOException, NoSuchAlgorithmException {//GEN-FIRST:event_jButton1ActionPerformed
        if (parcelCheckBox.isSelected()) {
            int id = Integer.parseInt(idText.getText());
            manager.generateParcels(id);
            logArea.setText(manager.parcelOutput());
        }
        if (propertyCheckBox.isSelected()) {
            int id = Integer.parseInt(idText.getText());
            manager.generateProperty(id);
            logArea.setText(manager.propertyOutput());
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void uoutputButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException {//GEN-FIRST:event_uoutputButtonActionPerformed
        if (parcelCheckBox.isSelected()) {
            logArea.setText(manager.parcelOutput());
        }
        if (propertyCheckBox.isSelected()) {
            logArea.setText(manager.propertyOutput());
        }
    }//GEN-LAST:event_uoutputButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) throws NoSuchAlgorithmException, IOException {//GEN-FIRST:event_deleteButtonActionPerformed
        if (parcelCheckBox.isSelected()) {
            int id = Integer.parseInt(idText.getText());
            boolean result = manager.deleteParcel(id);
            if (result) {
                logArea.setText("Parcel with id: " + id + " successfully deleted");
            } else {
                logArea.setText("Failed to delete parcel with id: " + id);
            }
        }
        if (propertyCheckBox.isSelected()) {
            int id = Integer.parseInt(idText.getText());
            boolean result = manager.deleteProperty(id);
            if (result) {
                logArea.setText("Property with id: " + id + " successfully deleted");
            } else {
                logArea.setText("Failed to delete property with id: " + id);
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) throws IOException, NoSuchAlgorithmException {//GEN-FIRST:event_addButtonActionPerformed
        if (parcelCheckBox.isSelected()) {
            double x1 = Double.parseDouble(gps1Text2.getText());
            double y1 = Double.parseDouble(gps1Text4.getText());
            double x2 = Double.parseDouble(gps2Text2.getText());
            double y2 = Double.parseDouble(gps2Text4.getText());
            GPS gps1 = new GPS('X', x1, 'X', y1);
            GPS gps2 = new GPS('X', x2, 'X', y2);
            String desc = descText.getText();
            String result = manager.insertParcel(desc, gps1, gps2);
            logArea.setText(result);
        }
        if (propertyCheckBox.isSelected()) {
            double x1 = Double.parseDouble(gps1Text2.getText());
            double y1 = Double.parseDouble(gps1Text4.getText());
            double x2 = Double.parseDouble(gps2Text2.getText());
            double y2 = Double.parseDouble(gps2Text4.getText());
            GPS gps1 = new GPS('X', x1, 'X', y1);
            GPS gps2 = new GPS('X', x2, 'X', y2);
            int registerNumber = Integer.parseInt(id2Text.getText());
            String desc = descText.getText();
            String result = manager.insertProperty(registerNumber, desc, gps1, gps2);
            logArea.setText(result);
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) throws NoSuchAlgorithmException, IOException {//GEN-FIRST:event_findButtonActionPerformed
        if (parcelCheckBox.isSelected()) {
            int id = Integer.parseInt(idText.getText());
            Parcel result = manager.findParcel(id);
            if (result == null) {
                logArea.setText("Parcel with id: " + id + " was not found");
            } else {
                this.idText.setText(String.valueOf(result.getId()));
                this.id2Text.setText("");
                this.descText.setText(result.getDescription());
                this.listText.setText(Arrays.toString(result.getList()));
                this.gps1Text1.setText(String.valueOf(result.getGps1().getWidth()));
                this.gps1Text2.setText(String.valueOf(result.getGps1().getX()));
                this.gps1Text3.setText(String.valueOf(result.getGps1().getHeight()));
                this.gps1Text4.setText(String.valueOf(result.getGps1().getY()));
                this.gps2Text1.setText(String.valueOf(result.getGps2().getWidth()));
                this.gps2Text2.setText(String.valueOf(result.getGps2().getX()));
                this.gps2Text3.setText(String.valueOf(result.getGps2().getHeight()));
                this.gps2Text4.setText(String.valueOf(result.getGps2().getY()));

                StringBuilder stringBuilder = new StringBuilder();
                for (int i : result.getList()) {
                    if (i != 0) {
                        Property property = manager.findProperty(i);
                        if (property != null) {
                            stringBuilder.append(property.toString() + "\n");
                        }
                    }
                }

                logArea.setText(stringBuilder.toString());
            }
        }
        if (propertyCheckBox.isSelected()) {
            int id = Integer.parseInt(idText.getText());
            Property result = manager.findProperty(id);
            if (result == null) {
                logArea.setText("Property with id: " + id + " was not found");
            } else {
                this.idText.setText(String.valueOf(result.getId()));
                this.id2Text.setText(String.valueOf(result.getRegisterNumber()));
                this.descText.setText(result.getDescription());
                this.listText.setText(Arrays.toString(result.getList()));
                this.gps1Text1.setText(String.valueOf(result.getGps1().getWidth()));
                this.gps1Text2.setText(String.valueOf(result.getGps1().getX()));
                this.gps1Text3.setText(String.valueOf(result.getGps1().getHeight()));
                this.gps1Text4.setText(String.valueOf(result.getGps1().getY()));
                this.gps2Text1.setText(String.valueOf(result.getGps2().getWidth()));
                this.gps2Text2.setText(String.valueOf(result.getGps2().getX()));
                this.gps2Text3.setText(String.valueOf(result.getGps2().getHeight()));
                this.gps2Text4.setText(String.valueOf(result.getGps2().getY()));

                StringBuilder stringBuilder = new StringBuilder();
                for (int i : result.getList()) {
                    if (i != 0) {
                        Parcel parcel = manager.findParcel(i);
                        if (parcel != null) {
                            stringBuilder.append(parcel.toString() + "\n");
                        }
                    }
                }

                logArea.setText(stringBuilder.toString());
            }
        }
    }//GEN-LAST:event_findButtonActionPerformed

    private void parcelCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_parcelCheckBoxItemStateChanged

    }//GEN-LAST:event_parcelCheckBoxItemStateChanged

    private void propertyCheckBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_propertyCheckBoxItemStateChanged

    }//GEN-LAST:event_propertyCheckBoxItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JTextField descText;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JButton editButton;
    private javax.swing.JButton findButton;
    private javax.swing.JLabel gps1Label;
    private javax.swing.JTextField gps1Text1;
    private javax.swing.JTextField gps1Text2;
    private javax.swing.JTextField gps1Text3;
    private javax.swing.JTextField gps1Text4;
    private javax.swing.JLabel gps2Label;
    private javax.swing.JTextField gps2Text1;
    private javax.swing.JTextField gps2Text2;
    private javax.swing.JTextField gps2Text3;
    private javax.swing.JTextField gps2Text4;
    private javax.swing.JTextField id2Text;
    private javax.swing.JLabel idLabel;
    private javax.swing.JTextField idText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField listText;
    private javax.swing.JTextArea logArea;
    private javax.swing.JPanel objectPanel;
    private javax.swing.JCheckBox parcelCheckBox;
    private javax.swing.JCheckBox propertyCheckBox;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton uoutputButton;
    // End of variables declaration//GEN-END:variables
}
